#include <stdio.h>
#include <stdlib.h> // Cho hàm malloc và free (nếu bạn muốn cấp phát động)

#define ROWS_A 2
#define COLS_A 3
#define ROWS_B 3
#define COLS_B 2

int main() {
    int matrixA[ROWS_A][COLS_A] = {
        {1, 2, 3},
        {4, 5, 6}
    };

    int matrixB[ROWS_B][COLS_B] = {
        {7, 8},
        {9, 10},
        {11, 12}
    };

    int matrixC[ROWS_A][COLS_B]; // Ma trận kết quả có số hàng bằng A và số cột bằng B

    // Kiểm tra điều kiện nhân ma trận
    if (COLS_A != ROWS_B) {
        printf("Khong the nhan hai ma tran nay. So cot cua ma tran A phai bang so hang cua ma tran B.\n");
        return 1; // Thoát chương trình với mã lỗi
    }

    // Tính tích hai ma trận
    for (int i = 0; i < ROWS_A; i++) {
        for (int j = 0; j < COLS_B; j++) {
            matrixC[i][j] = 0;
            for (int k = 0; k < COLS_A; k++) {
                matrixC[i][j] += matrixA[i][k] * matrixB[k][j];
            }
        }
    }

    // In ma trận A
    printf("Ma tran A (%dx%d):\n", ROWS_A, COLS_A);
    for (int i = 0; i < ROWS_A; i++) {
        for (int j = 0; j < COLS_A; j++) {
            printf("%d\t", matrixA[i][j]);
        }
        printf("\n");
    }

    // In ma trận B
    printf("\nMa tran B (%dx%d):\n", ROWS_B, COLS_B);
    for (int i = 0; i < ROWS_B; i++) {
        for (int j = 0; j < COLS_B; j++) {
            printf("%d\t", matrixB[i][j]);
        }
        printf("\n");
    }

    // In ma trận tích C
    printf("\nTich ma tran C (%dx%d) = A x B:\n", ROWS_A, COLS_B);
    for (int i = 0; i < ROWS_A; i++) {
        for (int j = 0; j < COLS_B; j++) {
            printf("%d\t", matrixC[i][j]);
        }
        printf("\n");
    }

    return 0;
}
